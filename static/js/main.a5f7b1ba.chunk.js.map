{"version":3,"sources":["components/Form/Form.js","Contact.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","reset","preventDefault","type","onChange","pattern","title","required","onClick","Contact","id","equals","contact","this","propTypes","PropTypes","string","ContactItem","onDeleteContact","ContactList","contacts","map","Filter","App","initContacts","setContacts","filter","setFilter","filteredContacts","toLowerCase","includes","uuidv4","newContact","find","alert","length","filterValue","idContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5f7b1ba.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        <p>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <p>Number</p>\r\n        <input\r\n          type=\"tel\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <br />\r\n        <button type=\"submit\" onClick={handleChange}>\r\n          Add contact\r\n        </button>\r\n      </label>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nclass Contact {\r\n  constructor(id, name, number) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.number = number;\r\n  }\r\n\r\n  equals = contact => {\r\n    return this.name === contact.name;\r\n  };\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        <p>Delete</p>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    <label>\r\n      <p>Find contacts by name:</p>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Form from './components/Form/Form';\nimport { v4 as uuidv4 } from 'uuid';\nimport Contact from './Contact';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport initContacts from './resources/initContacts.json';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([...initContacts]);\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = (name, number) => {\n    const id = uuidv4();\n    const newContact = new Contact(id, name, number);\n    if (contacts.find(contact => newContact.equals(contact))) {\n      alert(`${newContact.name} already exists in contacts`);\n      return;\n    }\n    setContacts([...contacts, newContact]);\n  };\n\n  const handleDeleteContact = idContact => {\n    setContacts(contacts.filter(contact => contact.id !== idContact));\n  };\n\n  const changeFilter = event => {\n    const filterValue = event.currentTarget.value;\n    setFilter(filterValue);\n  };\n\n  const getFilteredContacts = () => {\n    if (filter) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  const filteredContacts = getFilteredContacts();\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form onSubmit={handleAddContact} />\n      {filteredContacts.length > 0 && (\n        <div>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={handleDeleteContact}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}